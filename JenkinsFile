pipeline {
    agent any
    environment {
        GIT_CREDENTIALS = credentials('GitHub_Credential')
        DEBUG_BUILD_DESTINATION = 'id=F5A2A751-7732-46E3-BBD4-3804814228C8'
        XCODEBUILD_TARGET_SCHEME = 'FreTre'
        XCODEBUILD_TARGET_WORKSPACE = 'FreTre.xcworkspace'
        XCODEBUILD_TARGET_CONFIG = 'Debug'
        XCODEBUILD_TEST_TARGET = 'FreTreTests'
        XCODEBUILD_DERIVEDDATA_PATH = './build'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: '*', credentialsId: GIT_CREDENTIALS, url: 'https://github.com/stotic-dev/FreTreNew.git'
                }
                sh 'pwd; ls -al'
            }
        }
        stage('Pod Install') {
            steps {
                sh "LANG=en_US.UTF-8 /opt/homebrew/bin/pod install"
                echo 'successed pod install.'
            }
        }
        stage('BuildDebugScheme') {
            steps {
                sh "xcodebuild -workspace ${XCODEBUILD_TARGET_WORKSPACE} -scheme ${XCODEBUILD_TARGET_SCHEME} -configuration ${XCODEBUILD_TARGET_CONFIG} -destination ${DEBUG_BUILD_DESTINATION} -derivedDataPath ${XCODEBUILD_DERIVEDDATA_PATH} -quiet build"
                echo 'successed build FreTre.'
            }
        }
        stage('UnitTest') {
            steps {
                sh "xcodebuild test -workspace ${XCODEBUILD_TARGET_WORKSPACE} -scheme ${XCODEBUILD_TARGET_SCHEME} -configuration ${XCODEBUILD_TARGET_CONFIG} -destination ${DEBUG_BUILD_DESTINATION} -only-testin ${XCODEBUILD_TEST_TARGET} -quiet"
                echo 'successed run unit test FreTre.'
            }
        }
    }
}