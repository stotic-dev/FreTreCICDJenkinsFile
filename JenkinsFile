void updateGitHubCommitStatus(String status) {
    echo status
    if (env.CHANGE_ID) {
        for (commit in pullRequest.commits) {
            withCredentials([usernamePassword(credentialsId: 'GitHub_Credential', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh 'curl -X POST --user $USERNAME:$PASSWORD --data "{\\"state\\": \\"${status}\\"}" --url $GITHUB_API_URL/statuses/$commit'
            }
        }
    }
    else {
        echo 'Not Found pullRequest variable.'
    }
}

pipeline {
    agent any
    environment {
        GITHUB_API_URL='https://api.github.com/repos/stotic-dev/FreTreNew'
        DEBUG_BUILD_DESTINATION = 'id=F5A2A751-7732-46E3-BBD4-3804814228C8'
        XCODEBUILD_TARGET_SCHEME = 'FreTre'
        XCODEBUILD_TARGET_WORKSPACE = 'FreTre.xcworkspace'
        XCODEBUILD_TARGET_CONFIG = 'Debug'
        XCODEBUILD_TEST_TARGET = 'FreTreTests'
        XCODEBUILD_DERIVEDDATA_PATH = './build'
    }
    stages {
        stage('Initial Job') {
            steps {
                updateGitHubCommitStatus('pending')
            }
        }
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/*']], userRemoteConfigs: [[url: 'https://github.com/stotic-dev/FreTreNew.git']]])
                sh 'pwd; ls -al'
            }
        }
        stage('Pod Install') {
            steps {
                sh "LANG=en_US.UTF-8 /opt/homebrew/bin/pod install"
                echo 'successed pod install.'
            }
        }
        stage('BuildDebugScheme') {
            steps {
                sh "xcodebuild -workspace ${XCODEBUILD_TARGET_WORKSPACE} -scheme ${XCODEBUILD_TARGET_SCHEME} -configuration ${XCODEBUILD_TARGET_CONFIG} -destination ${DEBUG_BUILD_DESTINATION} -derivedDataPath ${XCODEBUILD_DERIVEDDATA_PATH} -quiet build"
                echo 'successed build FreTre.'
            }
        }
        stage('UnitTest') {
            steps {
                sh "xcodebuild test -workspace ${XCODEBUILD_TARGET_WORKSPACE} -scheme ${XCODEBUILD_TARGET_SCHEME} -configuration ${XCODEBUILD_TARGET_CONFIG} -destination ${DEBUG_BUILD_DESTINATION} -only-testing ${XCODEBUILD_TEST_TARGET} -quiet"
                echo 'successed run unit test FreTre.'
            }
        }
    }
    post {
        success {
            updateGitHubCommitStatus('success')
        }
        failure {
            updateGitHubCommitStatus('failure')
        }
    }
}